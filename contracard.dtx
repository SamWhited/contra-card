% \iffalse
%<*internal>
\begingroup
\input docstrip.tex
\keepsilent
\usedir{tex/latex/contracard}
\preamble

  Copyright 2012 Samuel Whited

  This file may be distributed and/or modified under the
  conditions of the LaTeX Project Public License, either
  version 1.3c of this license or (at your option) any later
  version. The latest version of this license is in:

  http://www.latex-project.org/lppl.txt

  and version 1.3c or later is part of all distributions of
  LaTeX version 2008/05/04 or later.

\endpreamble
\postamble

  ___________
  Maintainer: Sam Whited
  Website:    https://samwhited.com
  Contact:    sam@samwhited.com
  Public key: 0xEC2C9934

  This work consists of this file contracard.dtx
            and the derived files contracard.sty
                              and contracard.cls
                              and contracard.pdf

\endpostamble
\askforoverwritefalse

\generate{\file{contracard.sty}{\from{contracard.dtx}{contracard-pkg}}}
\generate{\file{contracard.cls}{\from{contracard.dtx}{contracard-cls}}}
\generate{\file{contracard-style.sty}{\from{contracard.dtx}{doc-style}}}

\obeyspaces
\Msg{****************************************************}
\Msg{*                                                  *}
\Msg{* To finish the installation you have to move the  *}
\Msg{* following file into a directory searched by TeX: *}
\Msg{*                                                  *}
\Msg{* contracard.sty                                   *}
\Msg{* contracard.cls                                   *}
\Msg{*                                                  *}
\Msg{****************************************************}

\endgroup
%</internal>
%
%<*driver>
\ProvidesFile{contracard.dtx}
%</driver>
%
%<*contracard-pkg>
\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{contracard}[2013/02/20]
%</contracard-pkg>
%<*contracard-cls>
\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesClass{contracard}[2013/02/20]
\AtEndOfClass{\LoadClass{article}}
%</contracard-cls>
%
%<*driver>
\documentclass[a4paper]{ltxdoc}
\usepackage{contracard-style}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
%
% \fi
%
% \GetFileInfo{contracard.dtx}
% \makeatletter
% \errorcontextlines=999
%
% \title{The Contra Card Project}
% \author{
%   \name{Sam Whited}\\
%   \texttt{sam@samwhited.com}
% }
% \date{\today\\\gittag}
%
% \maketitle
% \tableofcontents
%
% \section{Introduction}
%
% The \textbf{Contra Card} project is designed to aid in the formatting and
% typesetting of caller cards for traditional square and line dances.
%
% The project comprises a \LaTeX\ package (\fname{contracard.sty}) and a
% \LaTeX\ class (\fname{contracard.cls}). The package provides the core
% functionality of Contra Card while the class file acts as a convenience
% wrapper for making calling cards themselves.
%
% In general, if you want to make a calling card, use the \pkg{contracard} class
% and if you want to print a contra dance in a book or article, use a different
% class and require the \pkg{contracard} package.
%
% \subsection{License / about the source}
%
% This project may be distributed and/or modified under the conditions of the
% \LaTeX\ Project Public License, either version 1.3c of this license or (at
% your opinion) any later version. The latest version of this license is in:
%
% \url{http://www.latex-project.org/lppl.txt}
%
% and version 1.3c or later is part of all distributions of \LaTeX\ version
% 2008/05/04 or later.
%
% Contributions are welcome, and the latest development version of the project
% can always be found at \url{https://github.com/samwhited/contra-card}.
%
% \StopEventually{}
% \changes{0.1}{2013/02/09}{Created boilerplate for class}
% \changes{0.3}{2013/02/20}{Split core functionality out into package}
% \section{Building and using \pkg{contracard}}
%
% Before building the \pkg{contracard} package you should verify that the
% following dependencies are installed:
%
%    \begin{macrocode}
%<*contracard-pkg>
\RequirePackage{intcalc}
\RequirePackage{hyperref}
\RequirePackage{ifthen}
%</contracard-pkg>
%    \end{macrocode}
%
% If you're using the class, you'll want the following additional dependencies:
%
%    \begin{macrocode}
%<*contracard-cls>
\AtEndOfClass{\RequirePackage{geometry}}
\AtEndOfClass{\RequirePackage[compact]{titlesec}}
\AtEndOfClass{\RequirePackage{contracard}}
%</contracard-cls>
%    \end{macrocode}
%    \begin{macrocode}
%<*contracard-pkg>
%    \end{macrocode}
% Once you have all the required packages, building \pkg{contracard} from source
% can be accomplished in multiple ways. If the Makefile is present running
% \code{make help} will tell you everything you need to know. To manually
% extract the files and generate the documentation simply run \code{pdflatex}
% against \fname{contracard.dtx}:
%
% \begin{Verbatim}
%   $ pdflatex --shell-escape contracard.dtx
% \end{Verbatim}
%
% The \code{-{}-shell-escape} option is only required if you want the output to
% contain version information. This will also require that you have \pkg{git}
% installed as the version is determined by running
%
% \begin{Verbatim}
%   $ git describe --tags
% \end{Verbatim}
%
%
% \section{Environment setup}
%
% \begin{macro}{dancecount}
% \begin{macro}{partcount}
% \changes{0.2}{2013/02/15}{Create a counter for the current musical part}
% \begin{macro}{phrasecount}
% \changes{0.2}{2013/02/15}{Create a counter for the current musical phrase}
% Next, we'll create some counters that will help us keep track of the counts
% (or `steps') in the dance. The \code{dancecount} is reset at the start of each
% new dance, the \code{partcount} is reset at the begining of each part (eg.
% \code{A1} or \code{B1}), and the \code{phrasecount} is reset every time the
% part changes (eg. from \code{A} to \code{B}).
%    \begin{macrocode}
\newcounter{dancecount}
\newcounter{partcount}
\newcounter{phrasecount}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\progressed}
% \changes{0.2}{2013/02/15}{Allow the user to reset the phrase}
% The phrase will continue to increment (\code{A}, \code{B}, \code{C}) unless
% the user resets it by calling \code{\textbackslash progressed}. This does not
% strictly indicate progression, but it will be intuitive for most callers.
%    \begin{macrocode}
\newcommand*{\progressed}{\setcounter{phrasecount}{1}}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Formatting}
%
% There are also some options to determine how the environment will be
% formatted.
%
% \begin{macro}{\defaultcontraenv}
% \begin{macro}{\dancetitleenv}
% \changes{0.1}{2013/02/14}{Allow user to format moves}
% \changes{0.3}{2013/02/20}{Allow user to format dance title block}
% By default, all contra moves and the title block are wrapped in the
% \code{flushleft} environment. To change this you can renew
% the following macros:
%    \begin{macrocode}
\newcommand*{\defaultcontraenv}{flushleft}
\newcommand*{\dancetitleenv}{flushleft}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\dancetitleformat}
% \begin{macro}{\danceauthorformat}
% \begin{macro}{\danceformformat}
% \changes{0.3}{2013/02/20}{Allow the user to change the dance title format}
% \changes{0.3}{2013/02/20}{Allow the user to change the dance form format}
% To change the formatting of a dance's title, author, or form, redefine the
% following macros:
%    \begin{macrocode}
\newcommand*{\dancetitleformat}{\section*}
\newcommand*{\danceauthorformat}{\subsection*}
\newcommand*{\danceformformat}{\hfill}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \section{The Meat}
%
% Next we'll define the meat of the \pkg{contracard} package: The \code{contra}
% environment and the \code{\textbackslash move} command.
%
% \subsection{The \code{contra} environment}
%
% \begin{macro}{contra}
% \changes{0.1}{2013/02/14}{Create contra environment}
% The contra environment is pretty simple. It resets the various counters, and
% displays some information about the dance---if it is used inside of the
% \pkg{contracard} class, it also clears the page and moves the dance form into
% the header.
%    \begin{macrocode}
\newenvironment{contra}[4][\defaultcontraenv]{%
  \setcounter{dancecount}{0}
  \setcounter{partcount}{1}
  \setcounter{phrasecount}{1}
  \ifdefined\@ccisclass\clearpage\fi%
  \begin{\dancetitleenv}
    {\dancetitleformat{#2}}%
    \ifdefined\@ccisclass%
      \pagestyle{myheadings}
      \thispagestyle{myheadings}
      \markboth{}{\danceformformat{#4}}
    \else%
      {\danceformformat{#4}}%
    \fi%
    {\danceauthorformat{#3}}%
  \end{\dancetitleenv}
  \newcommand*{\@contraenv}{#1}
  \begin{\@contraenv}
}{%
  \end{\@contraenv}
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{The \code{\textbackslash move} command}
%
% \begin{macro}{\move}
% \changes{0.1}{2013/02/14}{Add move command}
% The next thing we need to define is the \code{\textbackslash move} command.
% This command takes in a move to display, and (optionally) the number of counts
% the move takes. If the count is not specified, 16 is used as the default.
%    \begin{macrocode}
\newcommand*{\move}[2][16]{%
  \ifthenelse{\intcalcMod{\value{dancecount}}{16}=0}{%
    \Alph{phrasecount}\arabic{partcount}.\ %
  }{}%
  \addtocounter{dancecount}{#1}%
  #2%
  \ifthenelse{\intcalcMod{\value{dancecount}}{8}=0
    \and\not\intcalcMod{\value{dancecount}}{16}=0}{;}{\nopagebreak}%
  \ifthenelse{\not\intcalcMod{\value{dancecount}}{8}=0}{,}{\nopagebreak}%
  \ifthenelse{\intcalcMod{\value{dancecount}}{32}=0}{%
    \addtocounter{phrasecount}{1}\setcounter{partcount}{0}\pagebreak[1]%
    \vspace{1em}}{}%
  \ifthenelse{\intcalcMod{\value{dancecount}}{16}=0}{%
    \addtocounter{partcount}{1}\newline}{}%
}
%    \end{macrocode}
% \end{macro}
%
% \section{Examples}
%
% A few examples are contained below:
%
% \subsection{Code's Compiling by Sam Whited}
%
% \begin{Verbatim}
% \begin{contra}{Code's Compiling}{Sam Whited}{Duple becket}
%   \move[8]{Neighbor dosido}
%   \move[8]{Partner see saw}
%   \move{Shadow swing}
%   \move[8]{Balance and petronella}
%   \move[8]{Balance and petronella}
%   \move[8]{Partner swing}
%   \move[8]{Left diagonal: Right and left through}
% \end{contra}
% \end{Verbatim}
%
% \subsection{Cherokee Shuffle by David Kaynor}
%
% \begin{Verbatim}
% \begin{contra}{Cherokee Shuffle}{David Kaynor}{Duple improper}
%   \move[8]{Circle left}
%   \move[8]{Neighbor dosido}
%   \move{Neighbor balance and swing}
%   \move[4]{Men allemande left \textonehalf}
%   \move[4]{Balance in a wave}
%   \move[8]{Partner swing}
%   \move[8]{Circle left \textthreequarters}
%   \move[4]{Balance the ring}
%   \move[4]{Partner california twirl}
% \end{contra}
% \end{Verbatim}
%
%    \begin{macrocode}
%</contracard-pkg>
%<*contracard-cls>
%    \end{macrocode}
%
% \section{The \pkg{contracard} class}
%
% The Contra Card project also provides a class (also called \pkg{contracard})
% that acts as a convenience wrapper around the core functionality provided by
% the package. This is useful for generating calling cards, and saves you the
% trouble of looking up standard card sizes and figuring out margins and where
% to put headings and the like.
%
% \paragraph{Options}
%
% \hypertarget{CONTRACARD:OPTIONS}{}
% \begin{macro}{small}
% \begin{macro}{medium}
% \begin{macro}{large}
% \begin{macro}{a7paper}
% The class can be loaded with any of the following options:
%    \begin{macrocode}
\DeclareOption{small}{%
  \AtBeginDocument{%
    \titleformat{\section}{\normalsize\bfseries}{\thesection}{1em}{}%
    \titleformat{\subsection}{\normalsize}{\thesection}{1em}{}%
  }
  \PassOptionsToPackage{%
    margin=0.25in,top=0.75in,paperwidth=5in,paperheight=3in%
  }{geometry}%
}
\DeclareOption{medium}{%
  \AtBeginDocument{\large}
  \PassOptionsToPackage{%
    margin=0.5in,top=0.75in,paperwidth=6in,paperheight=4in%
  }{geometry}%
}
\DeclareOption{large}{%
  \AtBeginDocument{\Large}
  \PassOptionsToPackage{%
    margin=0.75in,top=1in,paperwidth=8in,paperheight=5in%
  }{geometry}%
}
\DeclareOption{a7paper}{%
  \AtBeginDocument{%
    \titleformat{\section}{\normalsize\bfseries}{\thesection}{1em}{}%
    \titleformat{\subsection}{\normalsize}{\thesection}{1em}{}%
  }
  \PassOptionsToPackage{%
    margin=5mm,top=15mm,paperwidth=105mm,paperheight=74mm%
  }{geometry}%
}
\DeclareOption*{%
  \PassOptionsToClass{\CurrentOption}{article}%
}
%    \end{macrocode}
% The \code{small} option creates a 127.0 by 76.2 mm (5 by 3 in) card.
% The \code{medium} option creates a 152.4 by 101.6 mm (6 by 4 in) card.
% The \code{large} option creates a 203.2 by 27.0 mm (8 by 5 in) card.
% The \code{a7paper} option creates a 105 by 74 mm (4.1 by 2.9 in) card.
% Any unrecognized options are passed to the \pkg{article} class.
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{Environment setup}
%
% The \pkg{contracard} class does a little extra work to turn off headers, and
% prevent page numbering:
%
%    \begin{macrocode}
\AtBeginDocument{\pagestyle{empty}}
\AtBeginDocument{\pagenumbering{gobble}}
%    \end{macrocode}
% It also defines a command \code{\textbackslash @ccisclass} to let the
% \pkg{contracard} package know that it was called via the class:
%    \begin{macrocode}
\newcommand*{\@ccisclass}{}
\ProcessOptions\relax
%</contracard-cls>
%    \end{macrocode}
% \clearpage
% \setcounter{IndexColumns}{2}
% \phantomsection
% \addcontentsline{toc}{section}{Index}
% \PrintIndex
%
% \makeatletter
%   \renewenvironment{theglossary}{%
%   \glossary@prologue
%   \setlength\emergencystretch{5em}
%   \GlossaryParms \let\item\@idxitem \ignorespaces}{}
% \makeatother
% \clearpage
% \phantomsection
% \addcontentsline{toc}{section}{Change History}
% \PrintChanges
% \Finale
%
% \iffalse
%<*doc-style>
%    \begin{macrocode}
\ProvidesPackage{contracard-style}
\usepackage{fancyvrb,hologo,framed,multicol,url}
\usepackage[pdfborder=0, bookmarks, colorlinks=false, hidelinks]{hyperref}
\usepackage[parfill]{parskip}

\fvset{gobble=2}

\newcommand*{\gittag}{%
  \immediate\write18{%
    rm gittag.tex 2> /dev/null; (git describe --tags --dirty || echo "v0.0") 2> /dev/null > gittag.tex
  }%
  \InputIfFileExists{gittag.tex}{}{}\unskip%
  \immediate\write18{%
    rm gittag.tex 2> /dev/null
  }%
}

\newcommand*\name[1]{\textsc{#1}}
\newcommand*\fname[1]{\textsf{#1}}
\newcommand*\pkg[1]{\textsf{#1}}
\newcommand*\code[1]{\texttt{#1}}
%    \end{macrocode}
%</doc-style>
%\fi
\endinput
