% \iffalse
%<*internal>
\begingroup
\input docstrip.tex
\keepsilent
\usedir{tex/latex/contracard}
\preamble

  Copyright 2012 Samuel Whited

  This file may be distributed and/or modified under the
  conditions of the LaTeX Project Public License, either
  version 1.3c of this license or (at your option) any later
  version. The latest version of this license is in:

  http://www.latex-project.org/lppl.txt

  and version 1.3c or later is part of all distributions of
  LaTeX version 2008/05/04 or later.

\endpreamble
\postamble

  ___________
  Maintainer: Sam Whited
  Website:    https://samwhited.com
  Contact:    sam@samwhited.com
  Public key: 0xEC2C9934

  This work consists of this file contracard.dtx
            and the derived files contracard.sty
                              and contracard.cls
                              and contracard.pdf

\endpostamble
\askforoverwritefalse

\generate{\file{contracard.sty}{\from{contracard.dtx}{contracard-pkg}}}
\generate{\file{contracard.cls}{\from{contracard.dtx}{contracard-cls}}}

\obeyspaces
\Msg{****************************************************}
\Msg{*                                                  *}
\Msg{* To finish the installation you have to move the  *}
\Msg{* following file into a directory searched by TeX: *}
\Msg{*                                                  *}
\Msg{* contracard.sty                                   *}
\Msg{* contracard.cls                                   *}
\Msg{*                                                  *}
\Msg{****************************************************}

\endgroup
%</internal>
%
%<*driver>
\ProvidesFile{contracard.dtx}
%</driver>
%
%<*contracard-pkg>
\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{contracard}[2013/08/20 v0.5]
%</contracard-pkg>
%<*contracard-cls>
\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesClass{contracard}[2013/08/20 v0.5]
\AtEndOfClass{\LoadClass{article}}
%</contracard-cls>
%
%<*driver>
\documentclass[a4paper]{ltxdoc}
\usepackage{fancyvrb,hologo,framed,multicol,url,graphicx,cclicenses,contracard}
\ifccunicode\relax\else\usepackage[utf8x]{inputenc}\fi
\usepackage[pdfborder=0, bookmarks, colorlinks=false, hidelinks]{hyperref}
\usepackage[parfill]{parskip}

\fvset{gobble=2}

\newenvironment*{exampledance}{%
  \vspace{3em}
  \begin{framed}
    \begin{minipage}[t][74mm][t]{\textwidth}
}{%
    \end{minipage}
  \end{framed}
}

\newcommand*{\gittag}{%
  \immediate\write18{%
    rm gittag.tex 2> /dev/null; (git describe --tags --dirty || echo "v0.0") 2> /dev/null > gittag.tex
  }%
  \InputIfFileExists{gittag.tex}{}{}\unskip%
  \immediate\write18{%
    rm gittag.tex 2> /dev/null
  }%
}

\newcommand*\name[1]{\textsc{#1}}
\newcommand*\fname[1]{\textsf{#1}}
\newcommand*\pkg[1]{\textsf{#1}}
\newcommand*\code[1]{\texttt{#1}}
\newcommand*\regexp[1]{\texttt{#1}}
\newcommand*\word[1]{\textit{#1}}
\newcommand*{\XeLaTeX}{\hologo{XeLaTeX}}
\newcommand*{\LuaLaTeX}{\hologo{LuaLaTeX}}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
%
% \fi
%
% \GetFileInfo{contracard.dtx}
% \makeatletter
% \errorcontextlines=999
%
% \title{The Contra Card Project}
% \author{
%   \name{Sam Whited}\\*
%   \texttt{sam@samwhited.com}
% }
% \date{\today\\*\gittag}
%
% \maketitle
% \tableofcontents
%
% \section{Introduction}
%
% The \textbf{Contra Card} project is designed to aid in the formatting and
% typesetting of caller cards for traditional square and line dances.
%
% The project comprises a \LaTeX\ package (\fname{contracard.sty}) and a
% \LaTeX\ class (\fname{contracard.cls}). The package provides the core
% functionality of Contra Card while the class file acts as a convenience
% wrapper for making calling cards.
%
% \subsection{About the source}
%
% Contributions are welcome, and the latest development version of the project
% can always be found at \url{https://github.com/samwhited/contra-card}.
%
% \subsection{License}
%
% This project may be distributed and/or modified under the conditions of the
% \LaTeX\ Project Public License, either version 1.3c of this license or (at
% your opinion) any later version. The latest version of this license is in:
%
% \url{http://www.latex-project.org/lppl.txt}
%
% and version 1.3c or later is part of all distributions of \LaTeX\ version
% 2008/05/04 or later.
%
% \StopEventually{}
% \changes{0.1}{2013/02/09}{Created boilerplate for class}
% \changes{0.3}{2013/02/20}{Split core functionality out into package}
% \changes{0.4}{2013/02/22}{Support swung dances}
% \changes{0.4}{2013/02/22}{Add list of dances}
% \changes{0.4}{2013/02/22}{Add \pkg{tocloft} package to requirements}
% \changes{1.0.0}{2013/09/06}{Add Unicode (\XeLaTeX\ and \LuaLaTeX) support}
%
% \section{Building and using \pkg{contracard}}
%
% \paragraph{Dependencies} Before building the \pkg{contracard} package you
% should verify that the following dependencies are installed:
%
%    \begin{macrocode}
%<*contracard-pkg>
\RequirePackage{intcalc}
\RequirePackage{ifthen}
\RequirePackage{tocloft}
\RequirePackage{textcomp}
\RequirePackage{ifxetex,ifluatex}
%</contracard-pkg>
%    \end{macrocode}
%
% If you're using \XeLaTeX\ or \LuaLaTeX\ you should also make sure you have the
% \pkg{unicode-math} package:
%
%    \begin{macrocode}
%<*contracard-pkg>
\newif\ifccunicode
\ifxetex\ccunicodetrue\else\ifluatex\ccunicodetrue\fi\fi
\ifccunicode
  \RequirePackage{unicode-math}
\fi
%</contracard-pkg>
%    \end{macrocode}
%
% If you're using the class, you'll want the following additional dependencies:
%
%    \begin{macrocode}
%<*contracard-cls>
\AtEndOfClass{\RequirePackage{geometry}}
\AtEndOfClass{\RequirePackage[compact]{titlesec}}
\AtEndOfClass{\RequirePackage{contracard}}
%</contracard-cls>
%    \end{macrocode}
%    \begin{macrocode}
%<*contracard-pkg>
%    \end{macrocode}
%
% \paragraph{Building} Once you have all the required packages, building \pkg{contracard} from source
% can be accomplished in multiple ways. If the Makefile is present running
% \code{make help} will tell you everything you need to know. To manually
% extract the files and generate the documentation simply run \code{pdflatex}
% against \fname{contracard.dtx}:
%
% \begin{Verbatim}
%   $ pdflatex --shell-escape contracard.dtx
% \end{Verbatim}
%
% The \code{-{}-shell-escape} option is only required if you want the output to
% contain version information. This will also require that you have \pkg{git}
% installed as the version is determined by running
%
% \begin{Verbatim}
%   $ git describe --tags --dirty
% \end{Verbatim}
%
% \paragraph{Using \pkg{contracard}} Building results in two main files, a class
% and a package. In general, if you want to make a calling card, use the
% \pkg{contracard} class and if you want to print a contra dance in a book or
% article, use a different class and require the \pkg{contracard} package.
%
% \subsection{Options}
%
% \hypertarget{CCPACKAGE:OPTIONS}{}
% \begin{macro}{showcountbefore}
% \begin{macro}{showcountafter}
% The package can also be declared with the following options. For more
% information about each option, see the command which it calls.
%    \begin{macrocode}
\DeclareOption{showcountafter}{\showcountafter}
\DeclareOption{showcountbefore}{\showcountbefore}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \section{Formatting}
%
% These options determine how the dance will look.
%
% \begin{macro}{\defaultcontraenv}
% \begin{macro}{\dancetitleenv}
% \changes{0.1}{2013/02/14}{Allow user to format moves}
% \changes{0.3}{2013/02/20}{Allow user to format dance title block}
% By default, all contra moves and the title block are wrapped in the
% \code{flushleft} environment. To change this you can renew
% the following macros:
%    \begin{macrocode}
\newcommand*{\defaultcontraenv}{flushleft}
\newcommand*{\dancetitleenv}{flushleft}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\dancetitleformat}
% \begin{macro}{\danceauthorformat}
% \begin{macro}{\danceformformat}
% \changes{0.3}{2013/02/20}{Allow the user to change the dance title format}
% \changes{0.3}{2013/02/20}{Allow the user to change the dance form format}
% To change the formatting of a dance's title, author, or form, redefine the
% following macros:
%    \begin{macrocode}
\newcommand*{\dancetitleformat}{\section*}
\newcommand*{\danceauthorformat}{\subsection*}
\newcommand*{\danceformformat}{\hfill}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\movedelimiter}
% \changes{0.3}{2013/02/20}{Allow customizing the move delimiter character}
% \begin{macro}{\partdelimiter}
% \changes{0.3}{2013/02/20}{Allow customizing the part delimiter}
% \begin{macro}{\midpartdelimiter}
% \changes{0.3}{2013/02/20}{Allow customizing the mid-part delimiter}
% These commands define delimiters that are used between moves, or at the midway
% point in a part.
%    \begin{macrocode}
\newcommand*{\movedelimiter}{,}
\newcommand*{\partdelimiter}{.}
\newcommand*{\midpartdelimiter}{;}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\phraseseparator}
% \changes{0.4}{2013/02/22}{Allow custom phrase separator character}
% \begin{macro}{\phrasevspace}
% \changes{0.4}{2013/02/22}{Allow custom phrase separation length}
% The \code{\textbackslash phraseseparator} macro is inserted between every
% musical phrase and --- by default --- inserts \code{phrasevspace} amount of
% white space.
%    \begin{macrocode}
\newlength{\phrasevspace}
\setlength{\phrasevspace}{1em}
\newcommand*{\phraseseparator}{\vspace{\phrasevspace}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\showcountbefore}
% \changes{1.0.0}{2013/09/07}{Allow showing the count before each move}
% \begin{macro}{\showcountafter}
% \changes{1.0.0}{2013/09/07}{Allow showing the count after each move}
% \begin{macro}{\hidecountbefore}
% \changes{1.0.0}{2013/09/07}{Allow hiding the count before each move}
% \begin{macro}{\hidecountafter}
% \changes{1.0.0}{2013/09/07}{Allow hiding the count after each move}
% These macros allow the user to show or hide the moves duration before or after
% each move.
%    \begin{macrocode}
\newcommand*{\showcountbefore}{\def\@showcountbefore{}}
\newcommand*{\showcountafter}{\def\@showcountafter{}}
\newcommand*{\hidecountbefore}{\let\@showcountbefore\undefined}
\newcommand*{\hidecountafter}{\let\@showcountafter\undefined}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \section{The Meat}
%
% Next we'll define the meat of the \pkg{contracard} package. These are the
% functions, counters, and environments that actually deal with generating a
% dance.
%
% \subsection{Musical counts}
%
% \begin{macro}{dancecount}
% \begin{macro}{partcount}
% \changes{0.2}{2013/02/15}{Create a counter for the current musical part}
% \changes{0.3}{2013/02/21}{Change to contain the count, not the part itself}
% \begin{macro}{phrasecount}
% \changes{0.2}{2013/02/15}{Create a counter for the current musical phrase}
% \changes{0.3}{2013/02/21}{Change to contain the count, not the phrase itself}
% \begin{macro}{dancepart}
% \changes{0.3}{2013/02/21}{Create a new counter for the current phrase}
% \begin{macro}{dancephrase}
% \changes{0.3}{2013/02/21}{Create a new counter for the current phrase}
% First we'll create some counters that will help us keep track of the counts
% (or `steps') in the dance. The \code{dancecount} is reset at the start of each
% new dance, the \code{partcount} is reset at the begining of each part (eg.
% \code{A1} or \code{B1}), and the \code{phrasecount} is reset every time the
% part changes (eg. from \code{A} to \code{B}). The \code{dancepart} and
% \code{dancephrase} counters contain the number of the part of phrase in the dance
% (instead of the number of steps).
%    \begin{macrocode}
\newcounter{dancecount}
\newcounter{partcount}
\newcounter{phrasecount}
\newcounter{dancepart}
\newcounter{dancephrase}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{dancepartlength}
% \changes{0.4}{2013/02/22}{Create a new counter for the part length}
% \begin{macro}{dancephraselength}
% \changes{0.4}{2013/02/22}{Create a new counter for the phrase length}
% Most contra dances are composed of two 32 count phrases, each with two 16
% count parts, however, it's sometimes useful to change these lengths (for swung
% dances and the like). It's important to fully understand how the move command
% works before modifying these values. Changing just one or the other can have
% unexpected consequences.
%    \begin{macrocode}
\newcounter{dancepartlength}
\setcounter{dancepartlength}{16}
\newcounter{dancephraselength}
\setcounter{dancephraselength}{32}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\resetdancephrase}
% \begin{macro}{\resetdancepart}
% \begin{macro}{\resetdancephrase*}
% \begin{macro}{\resetdancepart*}
% \changes{0.2}{2013/02/15}{Allow the user to reset the phrase}
% \changes{0.3}{2013/02/21}{Change name of \code{\textbackslash progressed}}
% The phrase will continue to increment (\code{A}, \code{B}, \code{C}) unless
% the user resets it by calling \code{\textbackslash resetdancephrase}. The user
% can also manually reset the part. If the value of the phrase or part would be
% the same after resetting, no action is taken. You can use the splat version of
% the commands to force a reset (eg. even if the \code{dancephrase} counter is
% already at 1, the \code{dancephrase} and \code{phrasecount} counters will
% still be reset).
%    \begin{macrocode}
\newcommand*{\resetdancephrase}{%
  \ifthenelse{\value{partcount}=16}{\hspace*{\fill}\newline}{}%
  \@ifstar{\@resetdancephraseStar}{\@resetdancephraseNoStar}%
}
\newcommand*{\@resetdancephraseStar}{%
  \setcounter{dancephrase}{1}%
  \setcounter{phrasecount}{0}%
  \setcounter{phrasemovenum}{0}%
  \resetdancepart*%
}
\newcommand*{\@resetdancephraseNoStar}{%
  \ifthenelse{\value{dancephrase}=1}{}{%
    \setcounter{dancephrase}{1}%
    \setcounter{phrasecount}{0}%
    \setcounter{phrasemovenum}{0}%
    \resetdancepart%
  }%
}
\newcommand*{\resetdancepart}{%
  \@ifstar{\@resetdancepartStar}{\@resetdancepartNoStar}%
}
\newcommand*{\@resetdancepartStar}{%
  \setcounter{dancepart}{1}%
  \setcounter{partcount}{0}%
  \setcounter{partmovenum}{0}%
}
\newcommand*{\@resetdancepartNoStar}{%
  \ifthenelse{\value{dancepart}=1}{}{%
    \setcounter{dancepart}{1}%
    \setcounter{partcount}{0}%
    \setcounter{partmovenum}{0}%
  }%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\newdancephrase}
% \changes{0.3}{2013/02/21}{Allow user to manually start a new phrase}
% \begin{macro}{\newdancepart}
% \changes{0.3}{2013/02/21}{Allow user to manually start a new part}
% The user can also manually start a new phrase or part:
%    \begin{macrocode}
\newcommand*{\newdancephrase}{%
  \ifthenelse{\NOT\value{phrasecount}=0}{\hspace*{\fill}\newline}{}%
  \addtocounter{dancephrase}{1}%
  \setcounter{phrasecount}{0}%
  \setcounter{phrasemovenum}{0}%
  \resetdancepart*%
}
\newcommand*{\newdancepart}{%
  \hspace*{\fill}\newline
  \addtocounter{dancepart}{1}%
  \setcounter{partcount}{0}%
  \setcounter{partmovenum}{0}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsection{Move counts}

% \begin{macro}{phrasemovenum}
% \changes{1.0.0}{2013/09/05}{Add counter for the number of moves in the phrase}
% \begin{macro}{partmovenum}
% \changes{1.0.0}{2013/09/05}{Add counter for the number of moves in the part}
% \begin{macro}{dancemovenum}
% \changes{1.0.0}{2013/09/05}{Add counter for the number of moves in the dance}
% The following counters are used to keep track of the number of moves that have
% occurred thus far in the given dance, phrase, or part. They are incremented
% every time \code{\textbackslash move} is called.
%    \begin{macrocode}
\newcounter{phrasemovenum}
\newcounter{partmovenum}
\newcounter{dancemovenum}
\setcounter{phrasemovenum}{0}
\setcounter{partmovenum}{0}
\setcounter{dancemovenum}{0}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{The \code{contra} environment}
%
% \begin{macro}{contra}
% \changes{0.1}{2013/02/14}{Create contra environment}
% The contra environment is pretty simple. It resets the various counters, and
% displays some information about the dance---if it is used inside of the
% \pkg{contracard} class, it also clears the page and moves the dance form into
% the header.
%    \begin{macrocode}
\newenvironment{contra}[4][\defaultcontraenv]{%
  \refstepcounter{dance}
  \addcontentsline{lod}{dance}{\protect\numberline{\thedance}\ignorespaces#2\unskip}
  \setcounter{dancecount}{0}
  \setcounter{dancemovenum}{0}
  \resetdancepart*
  \resetdancephrase*
  \ifdefined\@ccisclass\clearpage\fi%
  \begin{\dancetitleenv}
    \ifdefined\@ccisclass%
      \pagestyle{myheadings}
      \thispagestyle{myheadings}
      \markboth{}{\danceformformat{\ignorespaces#4\unskip}}
    \else%
      {\danceformformat{\ignorespaces#4\unskip}}%
    \fi%
    {\dancetitleformat{\ignorespaces#2\unskip}}%
    {\danceauthorformat{\ignorespaces#3\unskip}}%
  \end{\dancetitleenv}
  \newcommand*{\@contraenv}{#1}
  \begin{\@contraenv}
}{%
  \end{\@contraenv}
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{The \code{\textbackslash move} command}
%
% \begin{macro}{\move}
% \changes{0.1}{2013/02/14}{Add move command}
% \changes{0.3}{2013/02/21}{Simplify dance logic using new counters}
% The next thing we need to define is the \code{\textbackslash move} command.
% This command takes in a move to display, and (optionally) the number of counts
% the move takes. If the count is not specified, 16 is used as the default.
%    \begin{macrocode}
\newcommand*{\move}[2][16]{%
  \ifthenelse{\value{phrasecount}=\value{dancephraselength}}{%
    \ifthenelse{\NOT\equal{\ignorespaces#1\unskip}{0}}{%
      \newdancephrase%
    }{}%
  }{%
    \ifthenelse{\(\value{partcount}=\value{dancepartlength}\)%
      \AND\NOT\equal{\ignorespaces#1\unskip}{0}}{%
     \newdancepart%
    }{}%
  }
  \ifthenelse{\(\intcalcMod{\value{dancecount}}{\value{dancepartlength}}=0\)%
    \AND\(\value{partmovenum}=0\)}{%
    \Alph{dancephrase}\arabic{dancepart}\partdelimiter\ %
  }{}%
  \addtocounter{dancecount}{#1}%
  \addtocounter{phrasecount}{#1}%
  \addtocounter{partcount}{#1}%
  \addtocounter{phrasemovenum}{1}%
  \addtocounter{partmovenum}{1}%
  \addtocounter{dancemovenum}{1}%
  \ifx\@showcountbefore\undefined%
    \relax%
  \else%
    (\ignorespaces#1\unskip)\ %
  \fi%
  \ignorespaces#2\unskip%
  \ifx\@showcountafter\undefined%
    \relax%
  \else%
    \ (\ignorespaces#1\unskip)%
  \fi%
  \ifthenelse{\NOT\equal{\ignorespaces#1\unskip}{0}}{%
    \ifthenelse{\value{phrasecount}=\value{dancephraselength}}{%
      \pagebreak[1]\phraseseparator%
    }{}%
    \ifthenelse{\value{partcount}=\intcalcDiv{\value{dancepartlength}}{2}}{%
      \midpartdelimiter\nopagebreak%
    }{%
      \ifthenelse{\NOT\value{partcount}=\value{dancepartlength}}{%
        \movedelimiter\nopagebreak\nolinebreak[2]%
      }{}%
    }%
  }{}%
}
%    \end{macrocode}
% \end{macro}
%
% \section{Lists and Indices}
%
% \subsection{Lists}
%
% Just as many classes allow you to build a table of contents, or a list of
% figures, \pkg{contracard} allows you to create a list of dances.
%
% \begin{macro}{\listofdances}
% The list of dances is created by a call to \code{\textbackslash listofdance}
% by default, however, we define an alias: \code{\textbackslash listofdances}
% to prevent confusion.
%    \begin{macrocode}
\newlistof{dance}{lod}{\lodtitle}
\newcommand*{\listofdances}{\listofdance}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\lodtitle}
% The title of the list of dances will be:
%    \begin{macrocode}
\newcommand*{\lodtitle}{List of Dances}
%    \end{macrocode}
% \end{macro}
%
% When printed, the list of dances looks something like this:
%
% \clearpage
% \begin{framed}
% \phantomsection
% \addcontentsline{toc}{subsubsection}{\lodtitle}
% \listofdances
% \end{framed}
%
% \section{Move shortcuts}
%
% Often you may find yourself copy and pasting common moves that often have the
% same timing, wording on the card, etc. For times like this \pkg{contracard}
% provides a number of shortcut macros.
%
% \begin{macro}{\allemande}
% \changes{1.0.0}{2013/09/05}{Add move shortcut}
% \begin{macro}{\allemande*}
% \changes{1.0.0}{2013/09/05}{Add move shortcut}

% The allemande macro takes two mandatory arguments: the count, and the
% direction to allemande. It also takes the person to allemande (eg. shadow,
% partner, neighbor, etc.) as an optional first argument.
%    \begin{macrocode}
\newcommand*{\allemande}{\@ifstar\@allemandeStar\@allemandeNoStar}
\newcommand*{\@allemandeNoStar}[3][\unskip]{%
  \move[#2]{Allemande \ignorespaces#3\unskip\ \ignorespaces#1\unskip}%
}
\newcommand*{\@allemandeStar}[3][\unskip]{%
  \move[#2]{\ignorespaces#3\unskip\ \ignorespaces#1\unskip\ allemande}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\balance}
% \changes{1.0.0}{2013/09/05}{Add move shortcut}
% \begin{macro}{\balance*}
% \changes{1.0.0}{2013/09/05}{Add move shortcut}
% \begin{macro}{\balanceand}
% \changes{1.0.0}{2013/09/05}{Add move shortcut}
% \begin{macro}{\balanceand*}
% \changes{1.0.0}{2013/09/05}{Add move shortcut}
% The \code{\textbackslash balance} macro is fairly simple: It takes a single
% optional argument and prints it after (or before if you use
% \code{\textbackslash balance*}) the word `balance'. Balances always take up 4
% beats unless you use the \code{\textbackslash balanceand} version of the
% command which takes up 0 logical counts.  This way you can follow it up with
% another command (eg. \code{\textbackslash balanceand*[Partner]\textbackslash
% swing}).
%    \begin{macrocode}
\newcommand*{\balance}{\@ifstar\@balanceStar\@balanceNoStar}
\newcommand*{\@balanceNoStar}[1][\unskip]{%
  \move[4]{Balance \ignorespaces#1\unskip}%
}
\newcommand*{\@balanceStar}[1][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[4]{\ignorespaces#1\unskip\ balance}%
}
\newcommand*{\balanceand}{\@ifstar\@balanceandStar\@balanceandNoStar}
\newcommand*{\@balanceandNoStar}[1][]{%
  \move[0]{Balance and \ignorespaces#1\unskip}%
}
\newcommand*{\@balanceandStar}[1][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[0]{\ignorespaces#1\unskip\ balance and}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\butterflywhirl}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\butterflywhirl*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% Two version of the \code{\textbackslash butterflywhirl} macro exist. Both
% taken in an optional argument that specifies the other dancer (eg. partner,
% neighbor, etc.), and the count. The normal macro prints the line:
%
% \begin{quote}
% Butterfly whirl \#1
% \end{quote}
%
% While the starred version prints:
%
% \begin{quote}
% \#1 butterfly whirl
% \end{quote}
%
% Both use proper spacing and capitalization if argument \#1 is left off.
%
%    \begin{macrocode}
\newcommand*{\butterflywhirl}{\@ifstar\@butterflyStar\@butterflyNoStar}
\newcommand*{\@butterflyNoStar}[2][\unskip]{%
  \move[#2]{Butterfly whirl \ignorespaces#1\unskip}%
}
\newcommand*{\@butterflyStar}[2][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[#2]{\ignorespaces#1\unskip\ butterfly whirl}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\courtesyturn}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\courtesyturn*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% Like \code{\textbackslash butterflywhirl} these macros take an optional person
% to turn, and the number of beats. The star version of the command tweaks the
% wording a bit.
%    \begin{macrocode}
\newcommand*{\courtesyturn}{\@ifstar\@courtesyturnStar\@courtesyturnNoStar}
\newcommand*{\@courtesyturnNoStar}[2][\unskip]{%
  \move[#2]{Courtesy turn \ignorespaces#1\unskip}%
}
\newcommand*{\@courtesyturnStar}[2][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[#2]{\ignorespaces#1\unskip\ courtesy turn}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\dosido}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\dosido*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\seesaw}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\seesaw*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% These commands create a dosido (aka \word{do-si-do}, \word{do-se-do},
% \word{dosado}, \word{dos-\`a-dos}, etc.) or a see saw (left shoulder dosido).
%    \begin{macrocode}
\newcommand*{\dosido}{\@ifstar\@dosidoStar\@dosidoNoStar}
\newcommand*{\@dosidoNoStar}[2][\unskip]{
  \move[#2]{Do-si-do \ignorespaces#1\unskip}%
}
\newcommand*{\@dosidoStar}[2][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[#2]{\ignorespaces#1\unskip\ do-si-do}%
}
\newcommand*{\seesaw}{\@ifstar\@seesawStar\@seesawNoStar}
\newcommand*{\@seesawNoStar}[2][\unskip]{
  \move[#2]{See saw \ignorespaces#1\unskip}%
}
\newcommand*{\@seesawStar}[2][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[#2]{\ignorespaces#1\unskip\ see saw}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\gypsy}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\gypsy*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\gypsyleft}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\gypsyleft*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\gypsyright}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\gypsyright*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% The \code{\textbackslash gypsy} macros take an optional argument (the person
% to gypsy) and one required argument (the count).
%    \begin{macrocode}
\newcommand*{\gypsy}{\@ifstar\@gypsyStar\@gypsyNoStar}
\newcommand*{\gypsyright}{\def\cc@thedir{right}\@ifstar\@gypsyDirStar\@gypsyDirNoStar}
\newcommand*{\gypsyleft}{\def\cc@thedir{left}\@ifstar\@gypsyDirStar\@gypsyDirNoStar}
\newcommand*{\@gypsyNoStar}[2][\unskip]{%
  \move[#2]{Gypsy \ignorespaces#1\unskip}
}
\newcommand*{\@gypsyStar}[2][\expandafter{G}\expandafter\@gobble\@gobbletwo]{%
  \move[#2]{\ignorespaces#1\unskip\ gypsy}
}
\newcommand*{\@gypsyDirNoStar}[2][\unskip]{%
  \move[#2]{Gypsy \cc@thedir\ \ignorespaces#1\unskip}
}
\newcommand*{\@gypsyDirStar}[2][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[#2]{\ignorespaces#1\unskip\ \cc@thedir\ gypsy}
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\ladieschain}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\ladieschain*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\menchain}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\menchain*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\halfladieschain}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\halfladieschain*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\halfmenchain}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\halfmenchain*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\fullladieschain}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\fullladieschain*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\fullmenchain}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\fullmenchain*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% The ladies chain (and it's less common variant for men) is actually a half of
% a ladies chain. The full ladies chain is often simply called as two ladies
% chains, however, the alternate full ladies chain commands are provided
% anyways. A set of commands for half ladies chains are also provided; these are
% exactly like the normal ladies chain commands except they include the word
% `half' in the output.
%    \begin{macrocode}
\newcommand*{\ladieschain}{\def\cc@who{ladies}\@ifstar\@chainStar\@chainNoStar}
\newcommand*{\menchain}{\def\cc@who{men}\@ifstar\@chainStar\@chainNoStar}
\newcommand*{\@chainNoStar}[1][\unskip]{%
  \move[8]{\expandafter\MakeUppercase\cc@who\ chain \ignorespaces#1\unskip}%
}
\newcommand*{\@chainStar}[1][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[8]{\ignorespaces#1\unskip\ \cc@who\ chain}%
}
\newcommand*{\halfladieschain}{\def\cc@who{ladies}\@ifstar\@halfchainStar\@halfchainNoStar}
\newcommand*{\halfmenchain}{\def\cc@who{men}\@ifstar\@halfchainStar\@halfchainNoStar}
\newcommand*{\@halfchainNoStar}[1][\unskip]{%
  \move[8]{\expandafter\MakeUppercase\cc@who\ half chain \ignorespaces#1\unskip}%
}
\newcommand*{\@halfchainStar}[1][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[8]{\ignorespaces#1\unskip\ \cc@who\ half chain}%
}
\newcommand*{\fullladieschain}{\def\cc@who{ladies}\@ifstar\@fullchainStar\@fullchainNoStar}
\newcommand*{\fullmenchain}{\def\cc@who{men}\@ifstar\@fullchainStar\@fullchainNoStar}
\newcommand*{\@fullchainNoStar}[1][\unskip]{%
  \move[16]{\expandafter\MakeUppercase\cc@who\ full chain \ignorespaces#1\unskip}%
}
\newcommand*{\@fullchainStar}[1][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[16]{\ignorespaces#1\unskip\ \cc@who\ full chain}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\promenade}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\promenade*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\halfpromenade}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\halfpromenade*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% The \code{\textbackslash promenade} and \code{\textbackslash halfpromenade}
% commands work slightly differently. Both take the person (or direction) you're
% promenading as the optional argument, but the \code{\textbackslash promenade}
% command also takes a mandatory argument (the number of beats) while
% \code{\textbackslash halfpromenade} command is fixed at 8 beats.
%    \begin{macrocode}
\newcommand*{\promenade}{\@ifstar\@promenadeStar\@promenadeNoStar}
\newcommand*{\@promenadeNoStar}[2][\unskip]{%
  \move[#2]{Promenade \ignorespaces#1\unskip}%
}
\newcommand*{\@promenadeStar}[2][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[#2]{\ignorespaces#1\unskip\ promenade}%
}
\newcommand*{\halfpromenade}{\@ifstar\@halfpromenadeStar\@halfpromenadeNoStar}
\newcommand*{\@halfpromenadeNoStar}[2][\unskip]{%
  \move[8]{Half promenade \ignorespaces#1\unskip}%
}
\newcommand*{\@halfpromenadeStar}[2][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[8]{\ignorespaces#1\unskip\ half promenade}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\swing}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% \begin{macro}{\swing*}
% \changes{1.0.0}{2013/09/06}{Add move shortcut}
% Creates a basic swing. Probably the most common move in modern contra dance,
% and also one of the simplest commands in this package.
%    \begin{macrocode}
\newcommand*{\swing}{\@ifstar\@swingStar\@swingNoStar}
\newcommand*{\@swingNoStar}[2][\unskip]{%
  \move[#2]{Swing \ignorespaces#1\unskip}%
}
\newcommand*{\@swingStar}[2][\expandafter\expandafter\expandafter\MakeUppercase\@gobbletwo]{%
  \move[#2]{\ignorespaces#1\unskip\ Swing}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \section{Helper macros}
%
% The following macros are used by the \pkg{contracard} package to perform
% various tasks. Those that may also be of use to the contra dance writer have
% been left unhidden.
%
% \begin{macro}{\timesaround}
% \changes{1.0.0}{2013/09/05}{Split out ability to calculate times around}
% Sometimes it's useful to calculate the approximate number of times a given
% move can be done in a certain number of beats of music (eg. the number of
% times around one can allemande in 6 beats). For this, the \code{\textbackslash
% timesaround} macro was created. It takes two arguments: the number of beats it
% takes to go one time around (eg. 4 for an allemande) and the total number of
% beats you have to work with. It spits out an integer, a fraction, or a mixed
% number and a word matching the regular expression:
% \regexp{/{[}1-9{]}*{[}\textonequarter\textonehalf%
% \textthreequarters{]}(\textbackslash\ times?)?/}.

%
% For example: \code{\textbackslash timesaround\{4\}\{6\}} produces:
% ``\timesaround{4}{6}".
%    \begin{macrocode}
\newcommand*{\timesaround}[2]{%
  \newcounter{timesaround}%
  \setcounter{timesaround}{\intcalcDiv{\intcalcNum{#2}}{\intcalcNum{#1}}}%
  \newcounter{quartertimesaround}%
  \setcounter{quartertimesaround}{%
    \intcalcMod{\intcalcNum{#2}}{\intcalcNum{#1}}%
  }%
  \ifthenelse{\value{timesaround}>0}{\arabic{timesaround}}{}%
  \ifthenelse{\value{quartertimesaround}=1}{\textonequarter}{%
    \ifthenelse{\value{quartertimesaround}=2}{\textonehalf}{%
      \ifthenelse{\value{quartertimesaround}=3}{\textthreequarters}{}%
    }%
  }%
  \ifthenelse{%
    \value{timesaround}>1\OR%
    \(\value{timesaround}=1\AND\NOT\value{quartertimesaround}=0\)%
  }{\ times}{%
    \ifthenelse{\value{timesaround}=1}{\ time}{}%
  }%
}%
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\ProcessOptions\relax
%</contracard-pkg>
%    \end{macrocode}
%
% \section{The \pkg{contracard} class}
%
%    \begin{macrocode}
%<*contracard-cls>
%    \end{macrocode}
%
% The Contra Card project also provides a class (\fname{contracard.cls}) which
% acts as a convenience wrapper around the core functionality provided by the
% package. This is useful for generating calling cards, and saves you the
% trouble of looking up standard card sizes and figuring out margins and where
% to put headings and the like.
%
% \subsection{Options}
%
% \hypertarget{CCCLASS:OPTIONS}{}
% \begin{macro}{small}
% \begin{macro}{medium}
% \begin{macro}{large}
% \begin{macro}{a7paper}
% The class can be loaded with any of the following options:
%    \begin{macrocode}
\DeclareOption{small}{%
  \AtBeginDocument{%
    \titleformat{\section}{\normalsize\bfseries}{\thesection}{1em}{}%
    \titleformat{\subsection}{\normalsize}{\thesection}{1em}{}%
  }
  \PassOptionsToPackage{%
    margin=0.25in,top=0.75in,paperwidth=5in,paperheight=3in%
  }{geometry}%
}
\DeclareOption{medium}{%
  \AtBeginDocument{\large}
  \PassOptionsToPackage{%
    margin=0.5in,top=0.75in,paperwidth=6in,paperheight=4in%
  }{geometry}%
}
\DeclareOption{large}{%
  \AtBeginDocument{\Large}
  \PassOptionsToPackage{%
    margin=0.75in,top=1in,paperwidth=8in,paperheight=5in%
  }{geometry}%
}
\DeclareOption{a7paper}{%
  \AtBeginDocument{%
    \titleformat{\section}{\normalsize\bfseries}{\thesection}{1em}{}%
    \titleformat{\subsection}{\normalsize}{\thesection}{1em}{}%
  }
  \PassOptionsToPackage{%
    margin=5mm,top=15mm,paperwidth=105mm,paperheight=74mm%
  }{geometry}%
}
\DeclareOption*{%
  \PassOptionsToPackage{\CurrentOption}{contracard}%
}
%    \end{macrocode}
% The \code{small} option creates a 127.0 by 76.2 mm (5 by 3 in) card.
% The \code{medium} option creates a 152.4 by 101.6 mm (6 by 4 in) card.
% The \code{large} option creates a 203.2 by 27.0 mm (8 by 5 in) card.
% The \code{a7paper} option creates a 105 by 74 mm (4.1 by 2.9 in) card.
% Any unrecognized options are passed to the \pkg{article} class.
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{Environment setup}
%
% The \pkg{contracard} class does a little extra work to turn off headers, and
% prevent page numbering:
%
%    \begin{macrocode}
\AtBeginDocument{\pagestyle{empty}}
\AtBeginDocument{\pagenumbering{gobble}}
%    \end{macrocode}
% It also defines a command \code{\textbackslash @ccisclass} to let the
% \pkg{contracard} package know that it was called via the class:
%    \begin{macrocode}
\newcommand*{\@ccisclass}{}
\ProcessOptions\relax
%</contracard-cls>
%    \end{macrocode}
%
% \section{Examples}
%
% A few examples are contained below. Note that the output is wrapped in a frame
% for clarity; no attempt has been made to make the frame match the size,
% margins, etc. that a calling card would have (these examples don't use
% \fname{contracard.cls}, just the package).
%
% \subsection{Code's Compiling by Sam Whited}
%
% This is a simple dance from the caller's perspective (not so for the dancers!)
% and doesn't do much to show off Contra Card's features. Each move is 8 counts,
% and it uses standard phrasing. Teaching it may be more difficult; at first
% glance it appears not to flow, but by adding a few turns and making sure that
% dancers know they don't have to stop and face forward before doing the see saw
% (almost as if it were a mad robin) it will flow smoothly. Overall it's a bit
% busy, and probably needs revision.
%
% \begin{Verbatim}
% \begin{contra}{Code's Compiling}{Sam Whited}{Duple becket}
%   \move[8]{Neighbor dosido}
%   \move[8]{Partner see saw}
%   \move{Shadow swing}
%   \move[8]{Balance and petronella}
%   \move[8]{Balance and petronella}
%   \move[8]{Partner swing}
%   \move[8]{Left diagonal: Right and left through}
%   \begin{flushleft}
%     {\footnotesize \textbf{Notes} The Neighbor dosido into a partner see saw
%     should be one fluid motion. Resist spinning in the dosido, and start
%     revolving slowly over your right shoulder as you enter the see saw and
%     everything will flow. Make sure lines have \textbf{lots} of space for the
%     dosido.}
%   \end{flushleft}
%   \vspace*{\fill}
%   \begin{flushright}
%   \href{http://creativecommons.org/licenses/by/3.0/}{%
%     \IfFileExists{by.png}{%
%       \includegraphics[width=1cm]{by.png}%
%     }{\cc\by}}
%   \end{flushright}
% \end{contra}
% \end{Verbatim}
%
% \begin{exampledance}
% \begin{contra}{Code's Compiling}{Sam Whited}{Duple becket}
%   \move[8]{Neighbor dosido}
%   \move[8]{Partner see saw}
%   \move{Shadow swing}
%   \move[8]{Balance and petronella}
%   \move[8]{Balance and petronella}
%   \move[8]{Partner swing}
%   \move[8]{Left diagonal: Right and left through}
%   \begin{flushleft}
%     {\footnotesize \textbf{Notes} The Neighbor dosido into a partner see saw
%     should be one fluid motion. Resist spinning in the dosido, and start
%     revolving slowly over your right shoulder as you enter the see saw and
%     everything will flow. Make sure lines have \textbf{lots} of space for the
%     dosido.}
%   \end{flushleft}
%   \vspace*{\fill}
%   \begin{flushright}
%   \href{http://creativecommons.org/licenses/by/3.0/}{%
%     \IfFileExists{by.png}{%
%       \includegraphics[width=1cm]{by.png}%
%     }{\cc\by}}
%   \end{flushright}
% \end{contra}
% \end{exampledance}
%
% \subsection{Untitled Blues Contras by Seth Tepfer}
%
% These blues contras consist of three, 16 count phrases (\code{A1}, \code{B1},
% and \code{C1}). The first employs the \code{\textbackslash newdancephrase}
% command to reset the phrase every 16 counts, the second changes the
% \code{dancephraselength} and lets \pkg{contracard} handle figuring out how to
% break up the phrases.
%
% \subsubsection*{Untitled Blues \textnumero\ 1}
%
% \begin{Verbatim}
% \renewcommand*{\partdelimiter}{:}
% \begin{contra}{Untitled Blues \textnumero\ 1}{Seth Tepfer}{Duple Minor Im.}
%   \move[8]{Neighbor gypsy}
%   \move[8]{Ladies gypsy}
%   \newdancephrase
%   \move[16]{Partner balance and swing}
%   \newdancephrase
%   \move[8]{Ladies chain}
%   \move[8]{Left hand star}
%   \vspace*{\fill}
%   \begin{flushright}
%     \href{http://creativecommons.org/licenses/by-nc/3.0/}{%
%       \IfFileExists{by-nc.png}{%
%         \includegraphics[width=1cm]{by-nc.png}%
%        }{\cc\bync}}
%   \end{flushright}
% \end{contra}
% \end{Verbatim}
%
% \begin{exampledance}
% \renewcommand*{\partdelimiter}{:}
% \begin{contra}{Untitled Blues \textnumero\ 1}{\href{http://www.dancerhapsody.com/calling/dances.html}{Seth Tepfer}}{Duple Minor Im.}
%   \move[8]{Neighbor gypsy}
%   \move[8]{Ladies gypsy}
%   \newdancephrase
%   \move[16]{Partner balance and swing}
%   \newdancephrase
%   \move[8]{Ladies chain}
%   \move[8]{Left hand star}
%   \vspace*{\fill}
%   \begin{flushright}
%     \href{http://creativecommons.org/licenses/by-nc/3.0/}{%
%       \IfFileExists{by-nc.png}{%
%         \includegraphics[width=1cm]{by-nc.png}%
%        }{\cc\bync}}
%   \end{flushright}
% \end{contra}
% \end{exampledance}
%
% \subsubsection*{Untitled Blues \textnumero\ 2}
%
% \begin{Verbatim}
% \setlength{\phrasevspace}{0em}
% \setcounter{dancephraselength}{16}
% \begin{contra}{Untitled Blues \textnumero\ 2}{Seth Tepfer}{Duple Minor Im.}
%   \move[8]{Neighbor gypsy}
%   \move[8]{Gents allemande left 1\textonehalf}
%   \move[16]{Partner balance and swing}
%   \move[8]{\textonehalf\ promenade across set}
%   \move[8]{Ladies chain}
%   \vspace*{\fill}
%   \begin{flushright}
%     \href{http://creativecommons.org/licenses/by-nc/3.0/}{%
%       \IfFileExists{by-nc.png}{%
%         \includegraphics[width=1cm]{by-nc.png}%
%        }{\cc\bync}}
%   \end{flushright}
% \end{contra}
% \end{Verbatim}
%
% \begin{exampledance}
% \setlength{\phrasevspace}{0em}
% \setcounter{dancephraselength}{16}
% \begin{contra}{Untitled Blues \textnumero\ 2}{\href{http://www.dancerhapsody.com/calling/dances.html}{Seth Tepfer}}{Duple Minor Im.}
%   \move[8]{Neighbor gypsy}
%   \move[8]{Gents allemande left 1\textonehalf}
%   \move[16]{Partner balance and swing}
%   \move[8]{\textonehalf\ promenade across set}
%   \move[8]{Ladies chain}
%   \vspace*{\fill}
%   \begin{flushright}
%     \href{http://creativecommons.org/licenses/by-nc/3.0/}{%
%       \IfFileExists{by-nc.png}{%
%         \includegraphics[width=1cm]{by-nc.png}%
%        }{\cc\bync}}
%   \end{flushright}
% \end{contra}
% \end{exampledance}
%
% \clearpage
% \setcounter{IndexColumns}{2}
% \phantomsection
% \addcontentsline{toc}{section}{Index}
% \PrintIndex
%
% \makeatletter
%   \renewenvironment{theglossary}{%
%   \glossary@prologue
%   \setlength\emergencystretch{5em}
%   \GlossaryParms \let\item\@idxitem \ignorespaces}{}
% \makeatother
% \clearpage
% \phantomsection
% \addcontentsline{toc}{section}{Change History}
% \PrintChanges
% \Finale
%
% \iffalse
%\fi
\endinput
